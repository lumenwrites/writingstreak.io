[
  {
    "title": "Ways to Invent Endless Content Ideas",
    "slug": "endless-ideas",
    "url": "/post/endless-ideas",
    "tags": [
      {
        "name": "Writing",
        "slug": "writing"
      },
      {
        "name": "Ideas",
        "slug": "ideas"
      }
    ],
    "description": "This is my collection of ways to come up with an unlimited number of ideas for your blog posts, youtube videos, podcast episodes, articles, and so on.",
    "thumbnail": null,
    "social": "/illustrations/post/endless-ideas/social.png",
    "comments": "https://twitter.com/lumenwrites/status/1461555951035637765",
    "relatedPosts": [
      "value-arbitrage"
    ],
    "body": "\n<h1 className=\"h1-header orange\">Ways to Invent Endless Content Ideas</h1>\n\nThis is my collection of strategies for coming up with an unlimited number of content ideas. You can use them for your posts, youtube videos, podcast episodes, and so on.\n \n### Project-based ideas\nWork on interesting projects, pursue challenging goals, and overcome obstacles on your path. Solving interesting challenges inevitably leads to original insights and epiphanies you can share with people.\n\nCreate how-to's and step-by-step tutorials, guide people through building a similar project (or a feature of the project you've built).\n\n### Learn by teaching\nYou don't have to be an expert in order to teach - study a subject you're interested in, try to develop a skill, keep notes, and share everything you're learning. If the ideas you're learning are useful to you, they will be useful to other people.\n\nMany people even prefer to learn from the beginners, because as a beginner you will find it easier to relate to other beginners - you will be able to notice the most relevant problems and explain things in a more accessible way.\n\n### Organize your notes\nYou can simply organize your old notes. I keep a file where I write down all the interesting ideas I learn, insightful thoughts that occur to me, anything I want to be able to remember later.\n\nThis is very helpful, because when I want to write - I don't have to invent anything on the spot, I can just organize my old notes. If I found an idea insightful enough to write down, it is probably worth sharing with people.\n\n### Ideas based on reading\nGet used to consuming high quality content - read books, watch video courses, watch interviews with smart people, listen to podcasts.\n\nWrite down the most interesting ideas in your own words, and organize them into [Evergreen Atomic Notes](/post/evergreen-atomic-notes). \n\nThen you can curate the most useful takeaways from multiple sources, combine these notes into longer posts.\n\nFor even more ideas, you can look at the book titles, course titles, and the chapter titles for inspiration - most of them are excellent topics for a post.\n\n### Research-based ideas\nWhen you're consuming good content, you're doing it passively, going wherever your curiosity leads you, learning whatever the books teach you.\n\nBut you can also pick a topic you're interested in, and deliberately research it - read wiki articles, blog posts, forum threads, and watch youtube videos. Write down the most insightful ideas, summarize them, and share them.\n\n### Explain complicated subjects\nLook for ideas that are complex, difficult to understand, or explained in a very dry and boring way. If you go through the work of understanding them - you can make them accessible, concise, engaging, and fun. This will be very valuable to people.\n\n### Make connections\nDevelop an expertise in different areas that aren't usually connected, and find ways to [value arbitrage](/post/value-arbitrage) between them - make interesting associations, apply useful ideas from one field to another.\n\nThis often leads to original insights and interesting inventions. Every time you learn a new idea, ask yourself - how does it apply to the fields I already know, does it solve any problems that I'm aware of?\n\nFor example, my post on [how writing is similar to startups](/post/writing-like-product). Another example - coming up with ideas for Godot tutorials by browsing popular tutorials made for other game engines (like Unity).\n\n### Copy what already works\nIf you're looking to create popular content, you can just find what already works well, and copy it.\n\nFind the most popular blogs, subreddits, and youtube channels in your niche.\n\nBrowse their most popular posts and videos.\n- Use the [Moz Link Explorer](https://analytics.moz.com/pro/link-explorer/top-pages) tool to find the most popular pages on a website.\n- Enter `site:thewebsite.com` into Reddit's search function and sort by top to find the most popular posts submitted to Reddit (and the communities where you can submit your own posts later on).\n- Sort youtube channel's videos (or the search results) by the number of views.\n\nSee if you can come up with your own take on these ideas, or do them better. Combine the best ideas and turns of phrase from multiple sources, add some insights they're missing, correct some mistakes and misconceptions they have.\n\n### Inaccessible Sources\nTeach what you're learning from sources not easily accessible to others.\n\n- Invest in expensive high quality courses, and teach what you've learned from them.\n- Attend real-life courses and live events, take notes, and report what happened there.\n- Teach what you're learning from your school, bootcamp, or a university.\n- If you're bilingual - teach what you've learned from the resources available only in a different language.\n- Find interesting gems of information in unpopular, obscure, old, forgotten, boring, or controversial sources. Make them popular, accessible, easy to discover.\n\n### Summarize\nTake large amounts of content and summarize them. For example - [Paul Graham 101](https://www.jaakkoj.com/blog/graham), a guy who has read all of the PG's essays and summarized them.\n\n### Answer Community Questions\nHelp people in online communities. \n\nFind the popular communities in your niche. Go to Discord servers, subreddits, forums in your niche, StackExchange sites, and see what problems people are dealing with, look for frequently asked questions.\n\nAnswer their questions using your own expertise or research, and share your answers with your audience.\n\nAs a side benefit, this will help you to promote your content - you can always write down your answer as a blog post or create a video tutorial, and share it as a reply to the question - people will appreciate it.\n\nYou can also do an AMA. If you're doing something interesting - create \"Ask me Anything\" threads on subreddits or twitter, or encourage people to email you their questions. Share your best answers.\n\n### Answer Your Own Questions\nKeep the list of your own questions you're confused about, things you would like to learn, concepts you don't understand, and the problems you're facing.\n\nMake posts in communities, and ask people for help. Every time you find a solution - summarize the most useful replies, or explain what you figured out on your own.\n\n### Target the general audience\nWhat aspects of the topic you're an expert in could you make interesting and accessible to a layman?\n\nShare what you find interesting about those things, educate people, explain why these topics are important, get other people excited about them.\n\nOnce they're interested in your subject, you can explain to them how to get started with it:\n\n### Create content for beginners\nThink about the difference between you now, and the version of yourself from 10 years ago. What are the most important things you'd like to tell yourself?\n\n- How would you help yourself to learn what you know now?\n- What are some things you wish you'd learn sooner?\n- What are some common mistakes and pitfalls you wish you could avoid?\n\n### Educate a different niche\nFind a group of people who would benefit from the ideas in your field, who aren't already in your field. Make posts like \"UI Design for Developers\", \"Sales for Developers\", or \"Math for Digital Artists\", or \"Social Skills for Engineers\".\n\n### Build in public, devlogs\nWork on something cool and share your progress. Game developers create devlogs about the projects they're working on, see if you can apply something like that to your own niche. \n\n### Behind the scenes\nDo postmortems, retrospectives, share success stories. \n\n- Once you have finished a big project you're proud of - share what you've learned from it.\n- If your project has failed - share your mistakes.\n- Explain how you've managed to achieve some unusual result (made money with a simple project, grew your project quickly, found a life hack that improved your life, etc.)\n- Share any interesting or unexpected details that went into building your project.\n\n### Case Studies\nGo on forums and offer people to give them feedback on their projects, articles, landing pages, portfolios, etc.\n\nCreate posts where you combine multiple case studies and show common patterns - what did these people do well, what kind of mistakes do they make.\n\n### Personal Experiments\nCreate \"I did x for a month and here's what happened.\" type posts.\n\n### New, small, or rapidly evolving niches\nBe on the cutting edge of rapidly evolving fields like webdev, gamedev, VR, AI, crypto, digital art, etc.\n\nThese fields change rapidly, new ideas, frameworks, and tools appear every month. You can research them, discover better ways to use them, or just help other people to stay up to date.\n \nThe new subjects often don't have a lot of content written about them (not much competition), and have a lot of interest and hype around them - perfect combination for creating popular content.\n\nThey also often have a lot of low-hanging-fruit ideas - ways you can contribute to the development of the field with your own original ideas and research (which you can also share).\n\nAll of the above also applies to novel or niche interests and weird hobbies, like sharing clever strategies for a new video game that just came out. Look for new cool things to be interested in, get excited about them, participate in small but passionate communities, share what you've discovered.\n\n### Keep the Snippets file\nIf you're a programmer or a technical writer - keep the file where you collect the useful code snippets.\n\nNotice when you're googling the same subject multiple times, or finding yourself copy-pasting similar code over and over again. Organize the related snippets into a post.\n\nList all the cool tricks and little hacks that may not be obvious to other people.\n\n### Artifacts and Assets\nShare the things you've developed as a side effect of working on your projects. Share Figma design systems, models you've made for your game, pitch deck for your startup. Maybe even open source your code entirely.\n\n### Interview people\nFind people who are more experienced or successful than you, send them cold emails or tweets, ask if they would like to do an interview and answer some questions.\n\nThis will be easier to do when your blog/channel/podcast becomes somewhat popular, because then you are offering people to share their ideas with a larger audience, which is more appealing.\n\nWhile your audience is small - you can talk to your peers, bloggers, people you met on social media, anyone on your level who's worth learning from. Normal people often appreciate if you invite them to an interview and ask them questions about their area of expertise.\n\n### Analyze successful products (and people)\nTake an already existing and successful product and explain how it's been made. Find people who are succeeding at some challenging task, and try to figure out how they're doing it, explain what makes them successful.\n\nFor example [Every Frame a Painting](https://www.youtube.com/c/everyframeapainting) makes video essays analyzing movies, [Game Maker's Toolkit](https://www.youtube.com/c/MarkBrownGMT/videos?view=0&sort=p&flow=grid) analyzes the mechanics of popular games, [Charisma on Command](https://www.youtube.com/c/Charismaoncommand) explains what makes popular characters and celebrities charismatic.\n\n### Make Predictions\nDo you have any useful insights about what will happen in several months or years? Register your predictions of things to come by writing about it, analyze the data, make an argument for your case.\n\nAs a side benefit this will help you to sharpen your prediction and decision making skills - you will be motivated to try to figure out in advance what will happen, and will be easily able to see and analyze your mistakes, improving your world model.\n\n### Industry news\nDo a summary of the most important things that happened in your niche during the last week or month. New cool features in your game engine, new cool startups that have been launched, new research papers that have been published.\n\nSome good examples - [GameFromScratch](https://www.youtube.com/c/gamefromscratch/videos?view=0&sort=p&flow=grid) makes videos about the news in gamedev industry, [TwoMinutePapers](https://www.youtube.com/c/K%C3%A1rolyZsolnai/videos?view=0&sort=p&flow=grid) summarizes the new and exciting AI research papers.\n\n### Useful Lists and Resources\nCompile the lists of the best tools, books, courses, youtube channels, links, places to promote your startup, etc. Describe them briefly, make recommendations, explain why people should check them out. For example, my [top godot youtube channels](https://godotacademy.io/best-godot-engine-tutorials) project.\n\n### Keyword Research\nUse SEO keyword research tools or the auto-suggestions you get when you type something into a youtube search bar.\n\nThey will help you to understand what people are actively looking for, and help you to create content you know will be in demand.\n\n### Reviews\nReview popular books, courses, products, tools. Create \"X vs Y\" posts where you compare two alternatives and share pros and cons of each.\n\n### Reactions\nKeep an eye for things that are popular but incorrect, common mistakes, misconceptions, false beliefs. \n\nLook for articles, books, or videos that you disagree with. Explain why they are wrong, make a good argument.\n\nAs a side benefit, this will encourage you to challenge your beliefs and look for good counter arguments. If they change your opinion - even better, explain why you used to have a false belief and share what you've learned.\n\n### Strong Opinions\nShare strong opinions. Even if you invent an opinion for the sole sake of argument, boldly sharing a strong opinion is [very useful](https://sive.rs/d1u) to others. Those who were undecided or ambivalent can just adopt your stance, but those who disagree can solidify their stance by arguing against yours.\n\n### Thinking on Paper\nWhen you have some question that confuses you or inspires your curiosity - write an essay about it. Try to organize your thoughts and come up with an answer as you go, use the process of writing to help you organize and clarify your thoughts.\n\n### Share more ideas\nDid I miss anything? Share your approaches and strategies in the comments!\n\n<!-- \n\n<!--\n### Share more ideas\nDid I miss anything? Share more ideas in the comments or email them to me (lumenwrites@gmail.com).\n\n### Creative writing is out of scope of this post (link to fiction ideas), but if you're writing fiction or comedy, you can invent many ideas just by making them up.\n\nstartup ideas\n\nIdea sources:\n- Core ideas, gamedev and CS concepts.\n- Popular game mechanics. Minecraft, Dark Souls, Spider Man, etc.\n\nBest learning resources. Best channels you should watch.\nmeta writing\n\nwrite useful essays. PG.\nhave strong opinions.\nwhat did EY do?\nWhat does SSC do? SSC JUST does research. PG jusr does essays ( I still dont bloody understand how).\nwhat else is there in my godot tutorials list?\n- HCs, Jokes, Fiction. Creative writing.\npractice making ideas.\n\nTypes of Ideas\n- How-To Guide. \n\ninfinite idea generation: https://www.ship30for30.com/post/how-to-start-writing-online-the-ship-30-for-30-ultimate-guide\n\ntypes of docs\n\ntypes of evergreen notes\n\n\"research\" and copy.\n\n[Epistemic Minor Leagues](https://astralcodexten.substack.com/p/epistemic-minor-leagues)\n-->"
  },
  {
    "title": "Business advice for software developers",
    "slug": "business-advice-for-software-developers",
    "url": "/post/business-advice-for-software-developers",
    "tags": [
      {
        "name": "Startup",
        "slug": "startup"
      }
    ],
    "description": "My favorite takeaways from an amazing Ask HN thread where technical founders shared the most important things they have learned from building a business.",
    "thumbnail": null,
    "social": "/illustrations/post/business-advice-for-software-developers/social.png",
    "comments": "https://twitter.com/lumenwrites/status/1461491884325494793",
    "relatedPosts": [
      "invent-the-future-from-the-future"
    ],
    "body": "\n<h1 className=\"h1-header orange-pattern\">Business advice for software developers</h1>\n\nToday I want to share with you my favorite takeaways from an amazing [Ask HN thread](https://news.ycombinator.com/item?id=14146850) where technical founders have shared the most important things they have learned from building a business.\n\n### Understand your customers\n> Most companies fail because they build something no one wants.\n\nFigure out who you are selling to and what problem you’re solving for them **before** you build anything. Forget the code, find the market first. **Talk to your customers**. Ideally, **solve your own problem**, but if you are not the target market - you need to find a domain expert who will join your team prior to the MVP creation.\n\n### Build an MVP\nBuild the smallest viable version of your product and test it as early as possible, get it in front of customers as quickly as you can, and get them to pay you.\n\nOften all you need is a landing page to measure the interest. Create a static website describing the problem and the solution, add a signup form, drive traffic to it with Facebook or Google ads, see how many people will sign up.\n\nSkip everything nonessential at the start. Focus on the key features that customers will pay for. It will feel broken, but it’s only broken if you can’t get any customers. When you find the right product formula and need to scale, you’ll probably need to refactor or rewrite large parts of it anyway.\n\nDo things that don’t scale. Don’t future proof your MVP, just make it so you can validate that your product has a market.\n\n### Master marketing\n**Only 20–40% of running a successful software development business consists of developing software.** A developer with marketing skills can build products and achieve revenues far in excess of their skill set. \n\n> A software developer with complete code and no customers is just a software developer. A business person with tons of customers and no software/product is in business.\n\nYour brand, reputation, and intellectual property are 100x more valuable than any software or technical feat. Software and technical work is relatively cheap. It cannot be the basis of your business because someone can come in and clone your product after you’ve done the hard work of introducing an innovative product and establishing/educating the market. If another product has only half of your functionality, but more substantive marketing, it’s more than enough for them to win.\n\n### Do not be seduced by the technology\nCustomers don’t care about the shiny new tech, what matters is solving their problem. Often it is much easier to do with an old and proven technology, because new tech changes rapidly, is less stable, has fewer learning resources and developers.\n\n> Sometimes devs don’t realize that the hardest parts of starting and growing a business have nothing to do with code or the tech stack you choose. Marketing, getting and retaining customers and everything else in between is way harder than writing code.\n\nFocus on your differentiation and competitive advantages, going stock with *everything* else.\n\n### Delegate\nYour time is valuable, the time you spend doing a task is the time you can’t spend doing anything else. So focus on doing the things you’re best at, and outsource everything else.\n\n> Write a job application from yourself for each of the jobs your startup needs to get done. Contemplate why on earth you would ever hire yourself for the job.\n\nWork out exactly what tasks there are in running your business that you are not an expert at, such as accounting, sales, copywriting, etc. and hire people to do those parts for you.\n\n### Set revenue targets\nPlan for profitability, set goals, and be realistic about whether you are successfully accomplishing them. If you don’t, you might have built a good side project, but not a startup.\n\n> Aim to get your company to 10k USD monthly product revenue within three months after launch (that’s basically a limit of ramen profitability for a small team of 2–4, plus a little bit of extra to run the business).\n\nIf you can’t, then either the product, the target market, or the team needs to be revised drastically. This is a great way to frame the product launch by forcing you to ask hard questions about what you’re doing.\n\nIt’s also useful as a pricing yardstick early on. If you have very few customers, they need to be paying enough that you reach $10k almost immediately. If your product isn’t worth that much, then you need to scale out. It’s best to figure this out right from the start.\n\nIf it feels like you can’t do $10k MRR in three months on your own, then you need to find a cofounder who can do it together with you… So it’s a good way to calibrate cofounder expectations as well.\n\n### Other great points\n-   Being good at talking to people and networking is important.\n-   A good reputation and word-of-mouth is better than buying the #1 spot on Adwords.\n-   **Fire bad clients**. They aren’t worth the stress, frustration, and opportunity cost.\n-   Learn to say “no” to feature requests that don’t fit.\n-   Don’t forget to **take care of yourself**. It’s a marathon, not a sprint. Sleep, exercise, eat healthy food.\n-   Be patient. It will take longer than you think.\n-   **Work on your process**. Doing an hour of client works earns you one hour of revenue. Improving your agency processes can earn you a large multiple of that.\n-   Figure out how to **sell again and again to the same customers**, otherwise you will have a high cost of customer acquisition.\n-   Don’t let a single customer account for more than 10% of your revenue. If that customer leaves, you’ll be in a painful situation.\n-   Banks will loan you money when you don’t need it and won’t loan money when you do need it. Apply for a loan or line of credit when you’re flush with cash in case of a rainy day.\n-   Don’t hire too quickly. Payroll + benefits can eat through profits like crazy in a software business.\n-   **Build simple products that do one thing well**.\n-   Don’t take money from anyone who can’t afford to lose it\n-   Don’t hire a ‘marketing’ firm. They will charge 10’s of thousands of dollars to ask you questions like ‘What do you think we should do?’ and then feed it back to you. If the product is positioned well with customers, you know more than the marketing company ever will.\n-   **Failures (at least small ones) are not a problem. Failing to recover is.**\n-   Start now, you’ll never feel ready. Just go, learn, and repeat. **Action is king.**"
  },
  {
    "title": "Invent the Future from the Future",
    "slug": "invent-the-future-from-the-future",
    "url": "/post/invent-the-future-from-the-future",
    "tags": [
      {
        "name": "Startup",
        "slug": "startup"
      },
      {
        "name": "Ideas",
        "slug": "ideas"
      }
    ],
    "description": "My key takeaways from “How to Invent the Future”, a brilliant lecture by Alan Kay at Startup School.",
    "thumbnail": null,
    "social": "/illustrations/post/invent-the-future-from-the-future/social.png",
    "comments": "https://twitter.com/lumenwrites/status/1463250099438555151",
    "relatedPosts": [
      "value-arbitrage",
      "business-advice-for-software-developers"
    ],
    "body": "\n<h1 className=\"h1-header orange\">Invent the Future from the Future</h1>\n\nMy key takeaways from “[How to Invent the Future](https://www.youtube.com/watch?v=id1WShzzMCQ)”, a brilliant lecture by Alan Kay at Startup School:\n\nFocus not just on problem solving, but on **problem finding**. You can be sure that 95% of everything we do is wrong, inefficient, and will be changed in the future, but it’s hard to see that from now.\n\nInstead of innovating out from the present, invent the future from the future. **Imagine the world 30 years from now**. Think “Wouldn’t it be ridiculous if we didn’t have this?”. Take this initial glimmer of an idea so far out that you don’t have to worry how you get there. Then bring it back closer to the present, **identify an achievable and realistic step towards it**.\n\nTry to see technology of today as the punch card machines in the 70s, and try to replace them with Apple II.\n\nStrive to really advance something very important. Something worth dedicating your life to. Pursue grand visions, not goals.\n\nBecause it is difficult, **focus on milestones, not deadlines**. Deadlines can be missed, and are hard to set up realistically when you’re doing something that’s never been done before. Milestones are inspiring to reach, and it’s more encouraging to go from one milestone to another in pursuit of a long term goal.\n\nDon’t worry about having the perfect batting average. Total number of successes matters, not success/failure ratio. Failure is just overhead — an expected cost of trying to do hard things."
  },
  {
    "title": "Value Arbitrage",
    "slug": "value-arbitrage",
    "url": "/post/value-arbitrage",
    "tags": [
      {
        "name": "Startup",
        "slug": "startup"
      },
      {
        "name": "Ideas",
        "slug": "ideas"
      }
    ],
    "description": "Generate value and ideas by cross-applying patterns between the different fields.",
    "thumbnail": null,
    "social": "/illustrations/post/value-arbitrage/social.png",
    "comments": "https://twitter.com/lumenwrites/status/1463250944821538819",
    "relatedPosts": [],
    "body": "\n<h1 className=\"h1-header orange\">Value Arbitrage</h1>\n\nThis is an extremely useful idea that I've learned just recently. In finance, \"arbitrage\" means buying and selling things in different markets to take the advantage of difference in price. Like buying a toy in India for $15, and then selling it for $25 in the US.\n\nTurns out, you can arbitrage not just products, but also information, knowledge, skill, or even human relationships.\n\nFor example, let's say you have met two amazing people who don't know each other. When you introduce them to each other, you generate a massive amount of value for both of them essentially out of nothing - you have given each of them a gift of knowing someone great.\n\nAnother example, is arbitraging information. Eliezer Yudkowsky have learned a lot about rationality and human biases from the books he has read, and then parlayed it into his blog, and later a Harry Potter fanfiction - and that has generated a huge amount of value to the people on the internet, who would never have been exposed to these ideas otherwise.\n\nYou can also arbitrage skills. That simply means applying good ideas you have learned in one field to a completely different one. I'm constantly applying the skills and ideas I've learned as a 3D artist to my programming process, and, surprisingly, the ideas I've learned from programming are making me a much better artist.\n\nFinally, an unexpected idea that I have discovered, is that you can arbitrage fiction tropes. You can take a trope you have seen in one story, apply it to a completely different genre, and it will create a new and interesting idea. You can take a scifi trope and set it in a fantasy world, or you can take a plot structure from a dramatic tv show and use it in your comedy script.\n\nSmart ideas are often universal. Learn a mental pattern in one field - and apply it elsewhere. Every time I have an epiphany in one of my crafts, I intentionally go through each of the other fields I'm interested in and apply it there. This has helped me to generate a lot of very interesting ideas."
  },
  {
    "title": "Write Evergreen Atomic Notes",
    "slug": "evergreen-atomic-notes",
    "url": "/post/evergreen-atomic-notes",
    "tags": [
      {
        "name": "Writing",
        "slug": "writing"
      },
      {
        "name": "Obsidian",
        "slug": "obsidian"
      }
    ],
    "description": "Turn your notes into posts that are useful, easy to write, easy to discover,  fun to read, and add up to productive output.",
    "thumbnail": null,
    "social": "/illustrations/post/evergreen-atomic-posts/social.png",
    "comments": "https://twitter.com/lumenwrites/status/1461358100657545227",
    "relatedPosts": [
      "writing-like-product"
    ],
    "body": "\n<h1 className=\"h1-header orange\">Write Evergreen Atomic Notes</h1>\n\nMost people take only transient notes - simply jotting down things they want to remember. This is very ineffective. The problem is that such notes are disorganized, difficult to search through and discover later on. You will never *actually* get around to rereading most of your notes, so they will never be useful to you (or anybody else) again. They are also unlikely to lead to creating valuable output.\n\nThe solution - **Write Evergreen Atomic Posts**:\n- **Evergreen** - organize your notes into posts which are designed to evolve and accumulate over time.\n- **Atomic** - each post is brief (under 300 words), and focused on one specific idea, trying to encapsulate the entirety of that idea as well as possible. \n- **Posts** - posts are published on your blog, organized using tags, easy to search through, and useful for other people.\n\n#### Good Evergreen Atomic Posts:\n- Have **Strong Titles** - a good title is an abstraction of the post itself. Use a succinct phrase which aims to make a clear claim that captures the entirety of the note's ideas. That enables you to use titles as an \"API\", making it easy to refer to your posts (see [Concept handles](https://publish.obsidian.md/andymatuschak/Andy+Matuschak/Concept+handles%2C+after+Alexander)).\n- Are **Modular** - apply the programming principle of *separation of concerns*, each post should only be “about” one thing, making them easy to recombine and interlink later on  (like Wikipedia articles).\n- Are meant to **Evolve** - don't try to make the note complete or perfect right away, don't over-edit it. Develop a practice of looking through your posts, and making incremental improvements every time you read through them.\n- Are **Well Interlinked**  - strive to make links between the posts, they make posts easier to discover and help you to see the connections between different ideas (leading to new insights). Interlinking posts also motivates you to revisit and update your old posts.\n\n#### Benefits:\nAtomic Posts are easy to write:\n- They're based on the notes you're already taking, so you don't have to stare at a blank page searching for ideas. \n- They're brief, so you're less likely to get overwhelmed and procrastinate out of fear of doing the work.\n- Daily posts contribute to your writing habit, posting a micro essay every day is an easier habit to develop than working on big long-term projects.\n- Publishing regularly is satisfying and gives you instant feedback from your readers, so you can get better at writing by interacting with your audience.\n- They help you to avoid perfectionism. Since they're meant to evolve, your first version of the post doesn't have to be perfect. The first version of the post is just your first attempt at expressing your idea, which will improve overtime as your knowledge and skill grows.\n\nAtomic Posts are easy to read:\n- It's easier and more satisfying to read something short and insightful than to struggle through a long article. \n- Since they're interlinked, they can lead your readers down the rabbithole of your writing. Somehow reading through a lot of easily digestible and insightful posts feels more engaging.\n\nAtomic Posts make you prolific because they add up to larger projects. You can create value in small unintimidating chunks (atomic posts), and then assemble multiple posts into longer articles, books, or courses.\n\nFinally, Atomic Posts are better for social media marketing - multiple short posts tend to do better than one big one.\n\n## Resources\nLearn more at [Andy Matuschak's blog](https://publish.obsidian.md/andymatuschak/Andy+Matuschak/Evergreen+notes).\n\nThere's a similar idea of creating [Atomic Essays](https://www.ship30for30.com/post/how-to-start-writing-online-the-ship-30-for-30-ultimate-guide), which I also found very helpful and useful.\n\n<!--\n## Related Posts\n<RelatedPost href=\"\">\n\n## Writing Like Coding\n\n</RelatedPost>\n\n<RelatedPost href=\"\">\n\n## On Writing Well\nA collection of tips on writing clearly.\n\n</RelatedPost>\n\n\ncomplete at any time\nrefactoring (writing like coding, writing like startup)\n\nmaps of content is a separate post.\n## Best Practices\nUse Maps of Content (separate post)\ndeas which are too big to get captured succinctly can be high-level overview\n\n- Making a strong claim (creating pressure to support the claim in the note). \n- Or asking a question (creating pressure to figure it out). The goal is to eventually drop the question mark, refactoring it into declarative/imperative notes.\n- Scott Alexander's concept handles, word defining an idea.\n\nInterlinked and Organized into [[Maps of Content]].\n[[Learn By Teaching]].\n\nhttps://publish.obsidian.md/andymatuschak/Prefer+note+titles+with+complete+phrases+to+sharpen+claims\nhttps://publish.obsidian.md/andymatuschak/Evergreen+notes+should+be+atomic\n\n\n\nhttps://publish.obsidian.md/andymatuschak/Evergreen+notes+should+be+concept-oriented\nOrganize notes by concept. Two different books about the same thing - one note.\n\n## Resources/References\n[Andy Matuschak on taking Evergreen Notes](https://publish.obsidian.md/andymatuschak/Andy+Matuschak/Evergreen+notes).\n> \nThe entire note’s ideas can then be referenced using that handle (see [Concept handles, after Alexander](https://publish.obsidian.md/andymatuschak/Andy+Matuschak/Concept+handles%2C+after+Alexander)).\n## Related Posts\n-->"
  },
  {
    "title": "Writing Like Product",
    "slug": "writing-like-product",
    "url": "/post/writing-like-product",
    "tags": [
      {
        "name": "Writing",
        "slug": "writing"
      }
    ],
    "description": "When you're writing blog posts or courses, think of yourself as a startup founder building a product.",
    "thumbnail": null,
    "social": "/illustrations/post/writing-like-product/social.png",
    "comments": "https://twitter.com/lumenwrites/status/1461464185364172804",
    "relatedPosts": [
      "evergreen-atomic-posts"
    ],
    "body": "\n<h1 className=\"h1-header orange\">Writing Like Product</h1>\n\n<!-- I find it helpful to think about writing posts as a startup founder building their product. -->\n\nWhen you're writing blog posts or courses, think of yourself as a startup founder building a product.\n\n**Understand your target audience.** Learn to see the world from the perspective of your readers, understand their problems and desires.\n\nWrite your posts to **solve a specific problem for your target audience.** Clearly identify a problem your readers have, in the title and introduction promise your readers to solve that problem, use the rest of the post to solve it. Take them from A to B, from where they are to where they want to be.\n\nCreate an MVP (Minimum Viable Product), the **most basic solution to your audience's problem**, and then **launch early** - as soon as your post coherently conveys what you want it to convey, you can show it to people and get some feedback. Then **iterate based on that feedback** to improve your product.\n\n**Do things that don't scale** - talk to your users (readers), respond to their comments, listen to what they have to say, ask them what they would like to read next.\n\nYou can think of your whole blog as a product (not just individual posts). Quickly create short posts on various topics, share them, gauge people's reaction, and **double down on what works best**.\n\nOne level of abstraction higher, you can also think of your **writing system** as a product. Analyze your writing, develop a repeatable process that enables you to be prolific and create successful posts. Tweak this process and make gradual improvements. Think about becoming a better writer as optimizing your writing system, improving your process.\n\nCompetently **market your writing**, actively promote what you wrote. In startups, marketing is just as important as building a good product. Learn to find people interested in your product, create titles and thumbnails that make people want to read what you wrote. Develop an article launching/marketing plan, a post promotion system you can gradually tweak and improve, and then proactively follow these steps (as opposed to haphazardly sharing your stuff on social media).\n\n**Care about the design**. The design of your posts is important, make it beautiful, attractive, readable. Do everything in your power to avoid wasting your readers' time (that would be equivalent to building a good UX for your product).\n\n# References\n[Very helpful thread by Dickie Bush](https://twitter.com/dickiebush/status/1384160201457037314)"
  }
]